"use client"

import React from "react"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { Card } from "@/components/ui/card"
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select"
import { Calculator, Users, Share2, RotateCcw, ArrowLeft, ArrowRight, HelpCircle } from 'lucide-react'
import { BackgroundAnimation } from "@/components/background-animation"
import { SiteHeader } from "@/components/site-header"
import { SiteFooter } from "@/components/site-footer"
import { Breadcrumbs } from "@/components/breadcrumbs"
import { SettlementInput } from "./components/SettlementInput"
import { SettlementResult } from "./components/SettlementResult"
import { useSimpleWarikan } from "./hooks/useSimpleWarikan"
import { toast } from "@/hooks/use-toast"
import { useState, useEffect } from "react"
import Link from "next/link"

export default function WariKanPage() {
  const {
    totalAmount,
    peopleCount,
    roundUp,
    result,
    step,
    members,
    settlementResult,
    setTotalAmount,
    setPeopleCount,
    setRoundUp,
    shareUrl,
    reset,
    goToSettlement,
    backToCalculate,
    updateMemberPaid,
    updateMemberName,
    calculateFinalSettlement,
  } = useSimpleWarikan()

  const [copied, setCopied] = useState(false)

  // SEOË®≠ÂÆö„ÇíÂº∑Âåñ
  useEffect(() => {
    document.title = "ÁßíÂâ≤„ÇäÔΩú3Áßí„ÅßÂÆå‰∫Ü„Åô„ÇãÊúÄÈÄüÂâ≤„ÇäÂãòË®àÁÆó„ÉÑ„Éº„É´„ÄêÁôªÈå≤‰∏çË¶Å„ÉªÁÑ°Êñô„Äë"
    
    // „É°„Çø„Éá„Ç£„Çπ„ÇØ„É™„Éó„Ç∑„Éß„É≥
    const metaDescription = document.querySelector('meta[name="description"]')
    if (metaDescription) {
      metaDescription.setAttribute(
        "content",
        "ÈáëÈ°ç„Å®‰∫∫Êï∞„ÇíÂÖ•Âäõ„Åô„Çã„Å†„Åë„Åß3Áßí„ÅßÂâ≤„ÇäÂãòÂÆå‰∫ÜÔºÅÁ≤æÁÆóÊ©üËÉΩ‰ªò„Åç„ÅßË™∞„ÅåË™∞„Å´„ÅÑ„Åè„ÇâÊâï„ÅÜ„Åã„ÇÇËá™ÂãïË®àÁÆó„ÄÇÁôªÈå≤‰∏çË¶Å„ÉªÂÆåÂÖ®ÁÑ°Êñô„ÄÇÈ£≤„Åø‰ºö„Éª„É©„É≥„ÉÅ„ÉªÊóÖË°å„ÅÆÁ≤æÁÆó„Å´ÊúÄÈÅ©„ÄÇ„Çπ„Éû„ÉõÂØæÂøú„ÄÇ"
      )
    }

    // „Ç≠„Éº„ÉØ„Éº„Éâ
    const metaKeywords = document.querySelector('meta[name="keywords"]')
    if (metaKeywords) {
      metaKeywords.setAttribute(
        "content",
        "Ââ≤„ÇäÂãò,Ë®àÁÆó,„Ç¢„Éó„É™,ÁÑ°Êñô,ÁôªÈå≤‰∏çË¶Å,Á≤æÁÆó,È£≤„Åø‰ºö,„É©„É≥„ÉÅ,ÊóÖË°å,„Çπ„Éû„Éõ,„ÉÑ„Éº„É´,ÁßíÂâ≤„Çä,Ââ≤„ÇäÂãòË®àÁÆóÊ©ü,ÊîØÊâï„ÅÑ,ÈÄÅÈáë,PayPay,LINE Pay"
      )
    }

    // OGP„Çø„Ç∞
    const ogTitle = document.querySelector('meta[property="og:title"]')
    if (ogTitle) {
      ogTitle.setAttribute("content", "ÁßíÂâ≤„ÇäÔΩú3Áßí„ÅßÂÆå‰∫Ü„Åô„ÇãÊúÄÈÄüÂâ≤„ÇäÂãòË®àÁÆó„ÉÑ„Éº„É´")
    }

    const ogDescription = document.querySelector('meta[property="og:description"]')
    if (ogDescription) {
      ogDescription.setAttribute(
        "content",
        "ÈáëÈ°ç„Å®‰∫∫Êï∞„ÇíÂÖ•Âäõ„Åô„Çã„Å†„Åë„Åß3Áßí„ÅßÂâ≤„ÇäÂãòÂÆå‰∫ÜÔºÅÁ≤æÁÆóÊ©üËÉΩ‰ªò„Åç„ÅßË™∞„ÅåË™∞„Å´„ÅÑ„Åè„ÇâÊâï„ÅÜ„Åã„ÇÇËá™ÂãïË®àÁÆó„ÄÇÁôªÈå≤‰∏çË¶Å„ÉªÂÆåÂÖ®ÁÑ°Êñô„ÄÇ"
      )
    }

    // ÊßãÈÄ†Âåñ„Éá„Éº„Çø
    const structuredData = {
      "@context": "https://schema.org",
      "@type": "WebApplication",
      "name": "ÁßíÂâ≤„Çä",
      "description": "3Áßí„ÅßÂÆå‰∫Ü„Åô„ÇãÊúÄÈÄüÂâ≤„ÇäÂãòË®àÁÆó„ÉÑ„Éº„É´",
      "url": window.location.href,
      "applicationCategory": "FinanceApplication",
      "operatingSystem": "Any",
      "browserRequirements": "HTML5, JavaScript",
      "offers": {
        "@type": "Offer",
        "price": "0",
        "priceCurrency": "JPY"
      },
      "featureList": [
        "3Áßí„ÅßÂâ≤„ÇäÂãòË®àÁÆó",
        "Á≤æÁÆóÊ©üËÉΩ‰ªò„Åç",
        "ÁôªÈå≤‰∏çË¶Å",
        "ÂÆåÂÖ®ÁÑ°Êñô",
        "„Çπ„Éû„ÉõÂØæÂøú",
        "2-20‰∫∫ÂØæÂøú",
        "Á´ØÊï∞Âá¶ÁêÜ",
        "ÁµêÊûúÂÖ±Êúâ"
      ],
      "screenshot": "https://yokaunit.com/ogp/warikan-screenshot.png",
      "softwareVersion": "1.0",
      "datePublished": "2024-01-01",
      "dateModified": new Date().toISOString().split('T')[0],
      "author": {
        "@type": "Organization",
        "name": "YokaUnit",
        "url": "https://yokaunit.com"
      },
      "publisher": {
        "@type": "Organization",
        "name": "YokaUnit",
        "url": "https://yokaunit.com"
      }
    }

    const script = document.createElement("script")
    script.type = "application/ld+json"
    script.textContent = JSON.stringify(structuredData)
    document.head.appendChild(script)

    return () => {
      if (document.head.contains(script)) {
        document.head.removeChild(script)
      }
    }
  }, [])

  const handleShare = async () => {
    const url = shareUrl()
    try {
      if (navigator.share) {
        await navigator.share({
          title: "ÁßíÂâ≤„Çä - Ââ≤„ÇäÂãòË®àÁÆóÁµêÊûú",
          url: url,
        })
      } else {
        await navigator.clipboard.writeText(url)
        setCopied(true)
        setTimeout(() => setCopied(false), 2000)
        toast({
          title: "URL„Çí„Ç≥„Éî„Éº„Åó„Åæ„Åó„Åü",
          description: "Ë®àÁÆóÁµêÊûú„ÇíÂÖ±Êúâ„Åß„Åç„Åæ„Åô",
        })
      }
    } catch (error) {
      console.error("Share failed:", error)
    }
  }

  const peopleOptions = Array.from({ length: 19 }, (_, i) => i + 2) // 2-20‰∫∫

  return (
    <>
      <SiteHeader />
      <div className="min-h-screen relative">
        <BackgroundAnimation />

        <div className="relative z-10 container mx-auto px-4 py-6">
          <Breadcrumbs
            items={[
              { label: "„Éõ„Éº„É†", href: "/" },
              { label: "„ÉÑ„Éº„É´‰∏ÄË¶ß", href: "/tools" },
              { label: "Ââ≤„ÇäÂãòË®àÁÆó„ÉÑ„Éº„É´", href: "/tools/warikan" },
            ]}
          />

          <div className="max-w-md mx-auto mt-6">
          {/* „Éò„ÉÉ„ÉÄ„Éº */}
          <div className="text-center mb-8">
            <div className="flex items-center justify-center mb-4">
              <div className="bg-gradient-to-r from-green-500 to-emerald-600 p-4 rounded-3xl shadow-xl">
                <Calculator className="h-10 w-10 text-white" />
              </div>
            </div>
            <h1 className="text-2xl md:text-4xl font-bold text-gray-900 mb-2">ÁßíÂâ≤„Çä</h1>
            <p className="text-gray-600 text-base md:text-lg">{step === "calculate" ? "3Áßí„ÅßÂâ≤„ÇäÂãòÂÆå‰∫Ü" : "Á≤æÁÆóÊñπÊ≥ï„ÇíË®àÁÆó"}</p>
            
            {/* ‰Ωø„ÅÑÊñπ„É™„É≥„ÇØ */}
            <div className="mt-4">
              <Link href="/tools/warikan/how-to-use">
                <Button
                  variant="outline"
                  size="sm"
                  className="text-blue-600 border-blue-200 hover:bg-blue-50 bg-transparent"
                >
                  <HelpCircle className="h-4 w-4 mr-1" />
                  ‰Ωø„ÅÑÊñπ„ÇíË¶ã„Çã
                </Button>
              </Link>
            </div>
          </div>

          {step === "calculate" ? (
            <>
              {/* „É°„Ç§„É≥ÂÖ•Âäõ„Ç´„Éº„Éâ */}
              <Card className="bg-white/90 backdrop-blur-sm border-0 shadow-xl p-8 mb-8">
                <div className="space-y-8">
                  {/* Á∑èÈ°çÂÖ•Âäõ */}
                  <div>
                    <label className="block text-xl font-bold text-gray-800 mb-4 text-center">üí∞ Á∑èÈ°ç</label>
                    <div className="relative">
                      <Input
                        type="number"
                        value={totalAmount || ""}
                        onChange={(e) => setTotalAmount(Number.parseInt(e.target.value) || 0)}
                        placeholder="0"
                        className="text-4xl font-bold text-center py-6 rounded-2xl border-2 border-gray-200 focus:border-green-400 focus:ring-green-400 bg-white"
                      />
                      <span className="absolute right-6 top-1/2 -translate-y-1/2 text-2xl text-gray-500 font-bold">
                        ÂÜÜ
                      </span>
                    </div>
                  </div>

                  {/* ‰∫∫Êï∞„Å®Á´ØÊï∞Âá¶ÁêÜ */}
                  <div className="grid grid-cols-2 gap-6">
                    <div>
                      <label className="block text-lg font-bold text-gray-700 mb-3 text-center">
                        <Users className="h-5 w-5 inline mr-2" />
                        ‰∫∫Êï∞
                      </label>
                      <Select
                        value={peopleCount.toString()}
                        onValueChange={(value) => setPeopleCount(Number.parseInt(value))}
                      >
                        <SelectTrigger className="text-xl font-bold py-4 rounded-xl border-2 border-gray-200">
                          <SelectValue />
                        </SelectTrigger>
                        <SelectContent className="max-h-60">
                          {peopleOptions.map((count) => (
                            <SelectItem key={count} value={count.toString()} className="text-lg">
                              {count}‰∫∫
                            </SelectItem>
                          ))}
                        </SelectContent>
                      </Select>
                    </div>

                    <div>
                      <label className="block text-lg font-bold text-gray-700 mb-3 text-center">Á´ØÊï∞Âá¶ÁêÜ</label>
                      <Select value={roundUp.toString()} onValueChange={(value) => setRoundUp(Number.parseInt(value))}>
                        <SelectTrigger className="text-xl font-bold py-4 rounded-xl border-2 border-gray-200">
                          <SelectValue />
                        </SelectTrigger>
                        <SelectContent>
                          <SelectItem value="1" className="text-lg">
                            1ÂÜÜ
                          </SelectItem>
                          <SelectItem value="10" className="text-lg">
                            10ÂÜÜ
                          </SelectItem>
                          <SelectItem value="100" className="text-lg">
                            100ÂÜÜ
                          </SelectItem>
                          <SelectItem value="1000" className="text-lg">
                            1000ÂÜÜ
                          </SelectItem>
                        </SelectContent>
                      </Select>
                    </div>
                  </div>
                </div>
              </Card>

              {/* ÁµêÊûúË°®Á§∫ */}
              {result && result.totalAmount > 0 && (
                <Card className="bg-gradient-to-r from-green-50 to-emerald-50 border-0 shadow-xl p-8 mb-8">
                  <div className="text-center space-y-6">
                    <div>
                      <p className="text-lg text-green-700 mb-2">‰∏Ä‰∫∫ÂΩì„Åü„Çä</p>
                      <p className="text-6xl font-bold text-green-800 mb-4">¬•{result.perPersonAmount.toLocaleString()}</p>
                    </div>

                    {/* Ë©≥Á¥∞ÊÉÖÂ†± */}
                    <div className="bg-white/70 rounded-xl p-4 space-y-2">
                      <div className="flex justify-between text-sm">
                        <span className="text-gray-600">Á∑èÈ°ç</span>
                        <span className="font-semibold">¬•{result.totalAmount.toLocaleString()}</span>
                      </div>
                      <div className="flex justify-between text-sm">
                        <span className="text-gray-600">‰∫∫Êï∞</span>
                        <span className="font-semibold">{result.peopleCount}‰∫∫</span>
                      </div>
                      <div className="flex justify-between text-sm">
                        <span className="text-gray-600">ÂêàË®àÂõûÂèéÈ°ç</span>
                        <span className="font-semibold">¬•{result.roundedTotal.toLocaleString()}</span>
                      </div>
                      {result.remainder > 0 && (
                        <div className="flex justify-between text-sm border-t pt-2">
                          <span className="text-orange-600">„ÅäÈá£„Çä</span>
                          <span className="font-semibold text-orange-600">¬•{result.remainder.toLocaleString()}</span>
                        </div>
                      )}
                    </div>

                    {/* „Ç¢„ÇØ„Ç∑„Éß„É≥„Éú„Çø„É≥ */}
                    <div className="grid grid-cols-2 gap-4">
                      <Button
                        onClick={goToSettlement}
                        className="bg-blue-500 hover:bg-blue-600 text-white font-bold py-4 rounded-xl text-lg"
                      >
                        <ArrowRight className="h-5 w-5 mr-2" />
                        Á≤æÁÆó„Åô„Çã
                      </Button>

                      <Button
                        onClick={handleShare}
                        variant="outline"
                        className="border-2 border-green-500 text-green-600 hover:bg-green-50 font-bold py-4 rounded-xl text-lg bg-transparent"
                      >
                        <Share2 className="h-5 w-5 mr-2" />
                        ÁµêÊûú„ÇíÂÖ±Êúâ
                      </Button>
                    </div>
                  </div>
                </Card>
              )}

              {/* „É™„Çª„ÉÉ„Éà„Éú„Çø„É≥ */}
              {(totalAmount > 0 || peopleCount !== 4) && (
                <div className="text-center mb-8">
                  <Button onClick={reset} variant="ghost" className="text-gray-500 hover:text-gray-700">
                    <RotateCcw className="h-4 w-4 mr-2" />
                    „É™„Çª„ÉÉ„Éà
                  </Button>
                </div>
              )}

              {/* ‰Ωø„ÅÑÊñπ */}
              <Card className="bg-blue-50/80 backdrop-blur-sm border-0 shadow-md p-6 mb-8">
                <h3 className="font-bold text-gray-800 mb-3 text-center">üöÄ ‰Ωø„ÅÑÊñπ</h3>
                <div className="space-y-2 text-sm text-gray-700">
                  <div className="flex items-center">
                    <span className="bg-blue-500 text-white rounded-full w-6 h-6 flex items-center justify-center text-xs font-bold mr-3">
                      1
                    </span>
                    <span>Á∑èÈ°ç„ÇíÂÖ•Âäõ</span>
                  </div>
                  <div className="flex items-center">
                    <span className="bg-blue-500 text-white rounded-full w-6 h-6 flex items-center justify-center text-xs font-bold mr-3">
                      2
                    </span>
                    <span>‰∫∫Êï∞„ÇíÈÅ∏Êäû</span>
                  </div>
                  <div className="flex items-center">
                    <span className="bg-blue-500 text-white rounded-full w-6 h-6 flex items-center justify-center text-xs font-bold mr-3">
                      3
                    </span>
                    <span>Á≤æÁÆó„Éú„Çø„É≥„ÅßË©≥Á¥∞Ë®àÁÆó or ÁµêÊûú„ÇíÂÖ±Êúâ</span>
                  </div>
                </div>
                <div className="text-center mt-4">
                  <Link href="/tools/warikan/how-to-use">
                    <Button variant="ghost" size="sm" className="text-blue-600 hover:text-blue-800">
                      Ë©≥„Åó„ÅÑ‰Ωø„ÅÑÊñπ„ÇíË¶ã„Çã ‚Üí
                    </Button>
                  </Link>
                </div>
              </Card>

              {/* ÁâπÂæ¥ */}
              <div className="grid grid-cols-2 gap-4 mb-8">
                <Card className="bg-white/80 backdrop-blur-sm border-0 shadow-md p-4 text-center">
                  <div className="text-2xl mb-2">‚ö°</div>
                  <p className="text-sm font-semibold text-gray-700">3Áßí„ÅßË®àÁÆó</p>
                </Card>
                <Card className="bg-white/80 backdrop-blur-sm border-0 shadow-md p-4 text-center">
                  <div className="text-2xl mb-2">üí∏</div>
                  <p className="text-sm font-semibold text-gray-700">Á≤æÁÆóÊ©üËÉΩ</p>
                </Card>
                <Card className="bg-white/80 backdrop-blur-sm border-0 shadow-md p-4 text-center">
                  <div className="text-2xl mb-2">üîí</div>
                  <p className="text-sm font-semibold text-gray-700">ÁôªÈå≤‰∏çË¶Å</p>
                </Card>
                <Card className="bg-white/80 backdrop-blur-sm border-0 shadow-md p-4 text-center">
                  <div className="text-2xl mb-2">üíØ</div>
                  <p className="text-sm font-semibold text-gray-700">ÂÆåÂÖ®ÁÑ°Êñô</p>
                </Card>
              </div>

              {/* SEOÁî®„Ç≥„É≥„ÉÜ„É≥„ÉÑ */}
              <Card className="bg-gray-50/80 backdrop-blur-sm border-0 shadow-md p-6 mb-8">
                <h3 className="font-bold text-gray-800 mb-3">üéØ „Åì„Çì„Å™Â†¥Èù¢„ÅßÊ¥ªË∫ç</h3>
                <div className="grid grid-cols-2 gap-4 text-sm text-gray-700">
                  <div>
                    <h4 className="font-semibold mb-2">üçª È£≤„Åø‰ºö„ÉªÊ≠ìÈÄÅËøé‰ºö</h4>
                    <p>Â§ß‰∫∫Êï∞„ÅÆÈ£≤„Åø‰ºö„ÅßÂππ‰∫ã„ÅÆË≤†ÊãÖ„ÇíËªΩÊ∏õ„ÄÇË§áÈõë„Å™Ë®àÁÆó„ÇÇÁû¨ÊôÇ„Å´ÂÆå‰∫Ü„ÄÇ</p>
                  </div>
                  <div>
                    <h4 className="font-semibold mb-2">üçΩÔ∏è „É©„É≥„ÉÅ„Éª„Éá„Ç£„Éä„Éº</h4>
                    <p>ÂèãÈÅî„Å®„ÅÆ„ÅäÈ£ü‰∫ã„Åß„ÄÇ„Çµ„ÇØ„ÉÉ„Å®Ë®àÁÆó„Åó„Å¶„Çπ„Éû„Éº„Éà„Å´Á≤æÁÆó„ÄÇ</p>
                  </div>
                  <div>
                    <h4 className="font-semibold mb-2">üèñÔ∏è ÊóÖË°å„Éª„Ç§„Éô„É≥„Éà</h4>
                    <p>ÊóÖË°åÂÖà„Åß„ÅÆÈ£ü‰∫ã‰ª£„ÇÑ„Ç§„Éô„É≥„Éà„ÅÆÂèÇÂä†Ë≤ªË®àÁÆó„Å´ÊúÄÈÅ©„ÄÇ</p>
                  </div>
                  <div>
                    <h4 className="font-semibold mb-2">‚òï „Ç´„Éï„Çß„ÉªÂ±ÖÈÖíÂ±ã</h4>
                    <p>Â∞ë‰∫∫Êï∞„Åß„ÇÇÂ§ß‰∫∫Êï∞„Åß„ÇÇ„ÄÅ„Å©„Çì„Å™„Ç∑„Éº„É≥„Åß„ÇÇ‰Ωø„Åà„Çã„ÄÇ</p>
                  </div>
                </div>
              </Card>
            </>
          ) : (
            <>
              {/* Á≤æÁÆó„Éö„Éº„Ç∏ */}
              <div className="flex items-center justify-between mb-6">
                <Button onClick={backToCalculate} variant="ghost" size="sm" className="text-gray-600 hover:text-gray-800">
                  <ArrowLeft className="h-4 w-4 mr-1" />
                  Êàª„Çã
                </Button>
                <Button onClick={reset} variant="ghost" size="sm" className="text-gray-500 hover:text-gray-700">
                  <RotateCcw className="h-4 w-4 mr-1" />
                  ÊúÄÂàù„Åã„Çâ
                </Button>
              </div>

              {/* Âü∫Êú¨ÊÉÖÂ†±Ë°®Á§∫ */}
              {result && (
                <Card className="bg-gradient-to-r from-green-50 to-emerald-50 border-0 shadow-md p-4 mb-6">
                  <div className="text-center">
                    <p className="text-sm text-green-700 mb-1">Âü∫Êú¨„ÅÆÂâ≤„ÇäÂãò</p>
                    <p className="text-2xl font-bold text-green-800">
                      ¬•{result.perPersonAmount.toLocaleString()} √ó {result.peopleCount}‰∫∫
                    </p>
                    <p className="text-xs text-green-600 mt-1">Á∑èÈ°ç: ¬•{result.totalAmount.toLocaleString()}</p>
                  </div>
                </Card>
              )}

              {/* Á≤æÁÆóÂÖ•Âäõ */}
              <SettlementInput
                members={members}
                onUpdateMemberPaid={updateMemberPaid}
                onUpdateMemberName={updateMemberName}
                onCalculate={calculateFinalSettlement}
              />

              {/* Á≤æÁÆóÁµêÊûú */}
              {settlementResult && (
                <div className="mt-8">
                  <SettlementResult result={settlementResult} onShare={handleShare} />
                </div>
              )}
            </>
          )}

          {/* SEOÁî®„ÅÆ„ÉÜ„Ç≠„Çπ„Éà */}
          <div className="mt-8 text-xs text-gray-500 space-y-2">
            <p>
              <strong>ÁßíÂâ≤„Çä</strong>„ÅØ„ÄÅÈáëÈ°ç„Å®‰∫∫Êï∞„ÇíÂÖ•Âäõ„Åô„Çã„Å†„Åë„Åß3Áßí„ÅßÂâ≤„ÇäÂãòË®àÁÆó„ÅåÂÆå‰∫Ü„Åô„ÇãÁÑ°Êñô„ÉÑ„Éº„É´„Åß„Åô„ÄÇ
              ÁôªÈå≤‰∏çË¶Å„Åß„Éñ„É©„Ç¶„Ç∂„Åã„Çâ„Åô„Åê„Å´‰Ωø„Åà„ÄÅÁ≤æÁÆóÊ©üËÉΩ‰ªò„Åç„ÅßÂÆüÈöõ„ÅÆÊîØÊâï„ÅÑÁä∂Ê≥Å„ÇÇÁÆ°ÁêÜ„Åß„Åç„Åæ„Åô„ÄÇ
            </p>
            <p>
              È£≤„Åø‰ºö„ÄÅ„É©„É≥„ÉÅ„ÄÅÊóÖË°å„ÄÅ„Ç§„Éô„É≥„Éà„Å™„Å©„ÄÅ„ÅÇ„Çâ„ÇÜ„Çã„Ç∑„Éº„É≥„ÅßÊ¥ªÁî®„Åß„Åç„ÇãÂÆüÁî®ÁöÑ„Å™Ââ≤„ÇäÂãò„Ç¢„Éó„É™„ÄÇ
              „Çπ„Éû„ÉõÂØæÂøú„Åß„ÄÅ2‰∫∫„Åã„Çâ20‰∫∫„Åæ„ÅßÂØæÂøú„ÄÇÁ´ØÊï∞Âá¶ÁêÜ„ÇÑÁµêÊûúÂÖ±ÊúâÊ©üËÉΩ„ÇÇÊê≠Ëºâ„ÄÇ
            </p>
            <p>
              <strong>„Ç≠„Éº„ÉØ„Éº„Éâ:</strong> Ââ≤„ÇäÂãò Ë®àÁÆó „Ç¢„Éó„É™ ÁÑ°Êñô ÁôªÈå≤‰∏çË¶Å Á≤æÁÆó È£≤„Åø‰ºö „É©„É≥„ÉÅ ÊóÖË°å „Çπ„Éû„Éõ „ÉÑ„Éº„É´ ÁßíÂâ≤„Çä Ââ≤„ÇäÂãòË®àÁÆóÊ©ü ÊîØÊâï„ÅÑ ÈÄÅÈáë
            </p>
          </div>
        </div>
        </div>
      </div>
      <SiteFooter />
    </>
  )
}
